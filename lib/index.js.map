{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/src/utils.ts","../src/src/transformers/mdast-to-slate/index.ts","../src/src/plugins/remark-to-slate.ts","../src/src/transformers/slate-to-mdast/index.ts","../src/src/plugins/slate-to-remark.ts","../src/src/transformers/slate0.47-to-slate.ts","../src/src/plugins/slate0.47-to-remark.ts","../src/src/transformers/slate-to-slate0.47.ts","../src/src/plugins/remark-to-slate0.47.ts","../src/src/transformers/mdast-to-golden-slate/index.ts","../src/src/plugins/remark-to-golden-slate.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n","import { GoldenNode } from \"./plugins/remark-to-golden-slate\";\n\nexport const unreachable = (_: never): never => {\n  throw new Error(\"unreachable\");\n};\n\ntype CiteIDMapFunction = (id: number) => Promise<number>;\n\nconst mapGoldenNodeCiteID = async (\n  node: GoldenNode,\n  mapFunction: CiteIDMapFunction\n): Promise<GoldenNode> => {\n  if (node.type === \"cite\" && node.data.id) {\n    return {\n      ...node,\n      data: {\n        ...node.data,\n        id: await mapFunction(node.data.id),\n      },\n    };\n  }\n\n  if (node.nodes) {\n    return {\n      ...node,\n      nodes: await mapGoldenSlateCiteIDs(\n        node.nodes as GoldenNode[],\n        mapFunction\n      ),\n    };\n  }\n\n  return node;\n};\n\nexport const mapGoldenSlateCiteIDs = async (\n  nodes: GoldenNode[],\n  mapFunction: CiteIDMapFunction\n): Promise<GoldenNode[]> => {\n  return await Promise.all(\n    nodes.map(async (node) => await mapGoldenNodeCiteID(node, mapFunction))\n  );\n};\n","import type * as slate from \"../../models/slate\";\nimport type * as mdast from \"../../models/mdast\";\nimport { unreachable } from \"../../utils\";\n\nexport type Decoration = Readonly<{\n  [key in (\n    | mdast.Emphasis\n    | mdast.Strong\n    | mdast.Delete\n    | mdast.InlineCode\n  )[\"type\"]]?: true;\n}>;\n\nexport type OverridedMdastBuilders = {\n  [key in mdast.Content[\"type\"]]?: MdastBuilder<key>;\n} & ({ [key: string]: MdastBuilder<typeof key> } | {});\n\nexport type MdastBuilder<T extends string> = (\n  node: T extends mdast.Content[\"type\"]\n    ? Extract<mdast.Content, { type: T }>\n    : unknown,\n  next: (children: any[]) => any\n) => object | undefined;\n\nexport const mdastToSlate = (\n  node: mdast.Root,\n  overrides: OverridedMdastBuilders\n): slate.Node[] => {\n  return buildSlateRoot(node, overrides);\n};\n\nconst buildSlateRoot = (\n  root: mdast.Root,\n  overrides: OverridedMdastBuilders\n): slate.Node[] => {\n  return convertNodes(root.children, {}, overrides);\n};\n\nconst convertNodes = (\n  nodes: mdast.Content[],\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n): slate.Node[] => {\n  return nodes.reduce<slate.Node[]>((acc, node) => {\n    acc.push(...buildSlateNode(node, deco, overrides));\n    return acc;\n  }, []);\n};\n\nconst buildSlateNode = (\n  node: mdast.Content,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n): SlateNode[] => {\n  const customNode = overrides[node.type]?.(node as any, (children) =>\n    convertNodes(children, deco, overrides)\n  );\n  if (customNode != null) {\n    return [customNode as SlateNode];\n  }\n\n  switch (node.type) {\n    case \"paragraph\":\n      return [buildParagraph(node, deco, overrides)];\n    case \"heading\":\n      return [buildHeading(node, deco, overrides)];\n    case \"thematicBreak\":\n      return [buildThematicBreak(node)];\n    case \"blockquote\":\n      return [buildBlockquote(node, deco, overrides)];\n    case \"list\":\n      return [buildList(node, deco, overrides)];\n    case \"listItem\":\n      return [buildListItem(node, deco, overrides)];\n    case \"table\":\n      return [buildTable(node, deco, overrides)];\n    case \"tableRow\":\n      return [buildTableRow(node, deco, overrides)];\n    case \"tableCell\":\n      return [buildTableCell(node, deco, overrides)];\n    case \"html\":\n      return [buildHtml(node)];\n    case \"code\":\n      return [buildCode(node)];\n    case \"yaml\":\n      return [buildYaml(node)];\n    case \"toml\":\n      return [buildToml(node)];\n    case \"definition\":\n      return [buildDefinition(node)];\n    case \"footnoteDefinition\":\n      return [buildFootnoteDefinition(node, deco, overrides)];\n    case \"text\":\n      return [buildText(node.value, deco)];\n    case \"emphasis\":\n    case \"strong\":\n    case \"delete\": {\n      const { type, children } = node;\n      return children.reduce<SlateNode[]>((acc, n) => {\n        acc.push(...buildSlateNode(n, { ...deco, [type]: true }, overrides));\n        return acc;\n      }, []);\n    }\n    case \"inlineCode\": {\n      const { type, value } = node;\n      return [buildText(value, { ...deco, [type]: true })];\n    }\n    case \"break\":\n      return [buildBreak(node)];\n    case \"link\":\n      return [buildLink(node, deco, overrides)];\n    case \"image\":\n      return [buildImage(node)];\n    case \"linkReference\":\n      return [buildLinkReference(node, deco, overrides)];\n    case \"imageReference\":\n      return [buildImageReference(node)];\n    case \"footnote\":\n      return [buildFootnote(node, deco, overrides)];\n    case \"footnoteReference\":\n      return [buildFootnoteReference(node)];\n    case \"math\":\n      return [buildMath(node)];\n    case \"inlineMath\":\n      return [buildInlineMath(node)];\n    default:\n      unreachable(node);\n      break;\n  }\n  return [];\n};\n\nexport type Paragraph = ReturnType<typeof buildParagraph>;\n\nconst buildParagraph = (\n  { type, children }: mdast.Paragraph,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type Heading = ReturnType<typeof buildHeading>;\n\nconst buildHeading = (\n  { type, children, depth }: mdast.Heading,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    depth,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type ThematicBreak = ReturnType<typeof buildThematicBreak>;\n\nconst buildThematicBreak = ({ type }: mdast.ThematicBreak) => {\n  return {\n    type,\n    children: [{ text: \"\" }],\n  };\n};\n\nexport type Blockquote = ReturnType<typeof buildBlockquote>;\n\nconst buildBlockquote = (\n  { type, children }: mdast.Blockquote,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type List = ReturnType<typeof buildList>;\n\nconst buildList = (\n  { type, children, ordered, start, spread }: mdast.List,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n    ordered,\n    start,\n    spread,\n  };\n};\n\nexport type ListItem = ReturnType<typeof buildListItem>;\n\nconst buildListItem = (\n  { type, children, checked, spread }: mdast.ListItem,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children:\n      // https://github.com/inokawa/remark-slate-transformer/issues/42\n      // https://github.com/inokawa/remark-slate-transformer/issues/129\n      children.length === 0\n        ? [{ text: \"\" }]\n        : convertNodes(children, deco, overrides),\n    checked,\n    spread,\n  };\n};\n\nexport type Table = ReturnType<typeof buildTable>;\n\nconst buildTable = (\n  { type, children, align }: mdast.Table,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n    align,\n  };\n};\n\nexport type TableRow = ReturnType<typeof buildTableRow>;\n\nconst buildTableRow = (\n  { type, children }: mdast.TableRow,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type TableCell = ReturnType<typeof buildTableCell>;\n\nconst buildTableCell = (\n  { type, children }: mdast.TableCell,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type Html = ReturnType<typeof buildHtml>;\n\nconst buildHtml = ({ type, value }: mdast.HTML) => {\n  return {\n    type,\n    children: [{ text: value }],\n  };\n};\n\nexport type Code = ReturnType<typeof buildCode>;\n\nconst buildCode = ({ type, value, lang, meta }: mdast.Code) => {\n  return {\n    type,\n    lang,\n    meta,\n    children: [{ text: value }],\n  };\n};\n\nexport type Yaml = ReturnType<typeof buildYaml>;\n\nconst buildYaml = ({ type, value }: mdast.YAML) => {\n  return {\n    type,\n    children: [{ text: value }],\n  };\n};\n\nexport type Toml = ReturnType<typeof buildToml>;\n\nconst buildToml = ({ type, value }: mdast.TOML) => {\n  return {\n    type,\n    children: [{ text: value }],\n  };\n};\n\nexport type Math = ReturnType<typeof buildMath>;\n\nconst buildMath = ({ type, value }: mdast.Math) => {\n  return {\n    type,\n    children: [{ text: value }],\n  };\n};\n\nexport type InlineMath = ReturnType<typeof buildInlineMath>;\n\nconst buildInlineMath = ({ type, value }: mdast.InlineMath) => {\n  return {\n    type,\n    children: [{ text: value }],\n  };\n};\n\nexport type Definition = ReturnType<typeof buildDefinition>;\n\nconst buildDefinition = ({\n  type,\n  identifier,\n  label,\n  url,\n  title,\n}: mdast.Definition) => {\n  return {\n    type,\n    identifier,\n    label,\n    url,\n    title,\n    children: [{ text: \"\" }],\n  };\n};\n\nexport type FootnoteDefinition = ReturnType<typeof buildFootnoteDefinition>;\n\nconst buildFootnoteDefinition = (\n  { type, children, identifier, label }: mdast.FootnoteDefinition,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n    identifier,\n    label,\n  };\n};\n\nexport type Text = ReturnType<typeof buildText>;\n\nconst buildText = (text: string, deco: Decoration) => {\n  return {\n    ...deco,\n    text,\n  };\n};\n\nexport type Break = ReturnType<typeof buildBreak>;\n\nconst buildBreak = ({ type }: mdast.Break) => {\n  return {\n    type,\n    children: [{ text: \"\" }],\n  };\n};\n\nexport type Link = ReturnType<typeof buildLink>;\n\nconst buildLink = (\n  { type, children, url, title }: mdast.Link,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n    url,\n    title,\n  };\n};\n\nexport type Image = ReturnType<typeof buildImage>;\n\nconst buildImage = ({ type, url, title, alt }: mdast.Image) => {\n  return {\n    type,\n    url,\n    title,\n    alt,\n    children: [{ text: \"\" }],\n  };\n};\n\nexport type LinkReference = ReturnType<typeof buildLinkReference>;\n\nconst buildLinkReference = (\n  { type, children, referenceType, identifier, label }: mdast.LinkReference,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n    referenceType,\n    identifier,\n    label,\n  };\n};\n\nexport type ImageReference = ReturnType<typeof buildImageReference>;\n\nconst buildImageReference = ({\n  type,\n  alt,\n  referenceType,\n  identifier,\n  label,\n}: mdast.ImageReference) => {\n  return {\n    type,\n    alt,\n    referenceType,\n    identifier,\n    label,\n    children: [{ text: \"\" }],\n  };\n};\n\nexport type Footnote = ReturnType<typeof buildFootnote>;\n\nconst buildFootnote = (\n  { type, children }: mdast.Footnote,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type FootnoteReference = ReturnType<typeof buildFootnoteReference>;\n\nconst buildFootnoteReference = ({\n  type,\n  identifier,\n  label,\n}: mdast.FootnoteReference) => {\n  return {\n    type,\n    identifier,\n    label,\n    children: [{ text: \"\" }],\n  };\n};\n\nexport type SlateNode =\n  | Paragraph\n  | Heading\n  | ThematicBreak\n  | Blockquote\n  | List\n  | ListItem\n  | Table\n  | TableRow\n  | TableCell\n  | Html\n  | Code\n  | Yaml\n  | Toml\n  | Definition\n  | FootnoteDefinition\n  | Text\n  | Break\n  | Link\n  | Image\n  | LinkReference\n  | ImageReference\n  | Footnote\n  | FootnoteReference\n  | Math\n  | InlineMath;\n","import type { Plugin } from \"unified\";\nimport type * as mdast from \"../models/mdast\";\nimport type * as slate from \"../models/slate\";\nimport {\n  OverridedMdastBuilders,\n  mdastToSlate,\n} from \"../transformers/mdast-to-slate\";\n\nexport type Options = {\n  overrides?: OverridedMdastBuilders;\n};\n\nconst plugin: Plugin<[Options?], mdast.Root, slate.Node[]> = function ({\n  overrides = {},\n} = {}) {\n  this.Compiler = function (node) {\n    return mdastToSlate(node, overrides);\n  };\n};\nexport default plugin;\n","import type * as unistLib from \"unist\";\nimport type * as slate from \"../../models/slate\";\nimport type * as mdast from \"../../models/mdast\";\nimport type * as slateInternal from \"../mdast-to-slate\";\nimport { unreachable } from \"../../utils\";\n\ntype DecorationType = keyof slateInternal.Decoration;\n\ntype TextOrDecoration =\n  | mdast.Text\n  | mdast.Emphasis\n  | mdast.Strong\n  | mdast.Delete\n  | mdast.InlineCode;\n\nexport type OverridedSlateBuilders = { [key: string]: SlateBuilder };\n\nexport type SlateBuilder = (\n  node: unknown,\n  next: (children: any[]) => any\n) => object | undefined;\n\nexport const slateToMdast = (\n  node: slate.Node,\n  overrides: OverridedSlateBuilders\n): mdast.Root => {\n  return buildMdastRoot(node, overrides);\n};\n\nconst buildMdastRoot = (\n  node: slate.Node,\n  overrides: OverridedSlateBuilders\n): mdast.Root => {\n  return <mdast.Root>{\n    type: \"root\",\n    children: convertNodes(\n      (node as any).children,\n      overrides\n    ) as mdast.Root[\"children\"],\n  };\n};\n\nconst convertNodes = (\n  nodes: slate.Node[],\n  overrides: OverridedSlateBuilders\n): unistLib.Node[] => {\n  const mdastNodes: unistLib.Node[] = [];\n  let textQueue: slateInternal.Text[] = [];\n  for (let i = 0; i <= nodes.length; i++) {\n    const n = nodes[i] as slateInternal.SlateNode;\n    if (n && isText(n)) {\n      textQueue.push(n);\n    } else {\n      const mdastTexts: TextOrDecoration[] = [];\n      const starts: DecorationType[] = [];\n      let ends: DecorationType[] = [];\n      let textTemp: string = \"\";\n      for (let j = 0; j < textQueue.length; j++) {\n        const cur = textQueue[j]!;\n        textTemp += cur.text;\n\n        const prevStarts = starts.slice();\n        const prevEnds = ends.slice();\n\n        const prev = textQueue[j - 1];\n        const next = textQueue[j + 1];\n        ends = [];\n        ([\"inlineCode\", \"emphasis\", \"strong\", \"delete\"] as const).forEach(\n          (k) => {\n            if (cur[k]) {\n              if (!prev || !prev[k]) {\n                starts.push(k);\n              }\n              if (!next || !next[k]) {\n                ends.push(k);\n              }\n            }\n          }\n        );\n\n        const endsToRemove = starts.reduce<\n          { key: DecorationType; index: number }[]\n        >((acc, k, kIndex) => {\n          if (ends.includes(k)) {\n            acc.push({ key: k, index: kIndex });\n          }\n          return acc;\n        }, []);\n\n        if (starts.length > 0) {\n          let bef = \"\";\n          let aft = \"\";\n          if (\n            endsToRemove.length === 1 &&\n            (prevStarts.toString() !== starts.toString() ||\n              // https://github.com/inokawa/remark-slate-transformer/issues/90\n              (prevEnds.includes(\"emphasis\") && ends.includes(\"strong\"))) &&\n            starts.length - endsToRemove.length === 0\n          ) {\n            while (textTemp.startsWith(\" \")) {\n              bef += \" \";\n              textTemp = textTemp.slice(1);\n            }\n            while (textTemp.endsWith(\" \")) {\n              aft += \" \";\n              textTemp = textTemp.slice(0, -1);\n            }\n          }\n          let res: TextOrDecoration = {\n            type: \"text\",\n            value: textTemp,\n          };\n          textTemp = \"\";\n          const startsReversed = starts.slice().reverse();\n          startsReversed.forEach((k) => {\n            switch (k) {\n              case \"inlineCode\":\n                res = {\n                  type: k,\n                  value: (res as any).value,\n                };\n                break;\n              case \"strong\":\n              case \"emphasis\":\n              case \"delete\":\n                res = {\n                  type: k,\n                  children: [res],\n                };\n                break;\n              default:\n                unreachable(k);\n                break;\n            }\n          });\n          const arr: TextOrDecoration[] = [];\n          if (bef.length > 0) {\n            arr.push({ type: \"text\", value: bef });\n          }\n          arr.push(res);\n          if (aft.length > 0) {\n            arr.push({ type: \"text\", value: aft });\n          }\n          mdastTexts.push(...arr);\n        }\n\n        if (endsToRemove.length > 0) {\n          endsToRemove.reverse().forEach((e) => {\n            starts.splice(e.index, 1);\n          });\n        } else {\n          mdastTexts.push({ type: \"text\", value: textTemp });\n          textTemp = \"\";\n        }\n      }\n      if (textTemp) {\n        mdastTexts.push({ type: \"text\", value: textTemp });\n        textTemp = \"\";\n      }\n\n      mdastNodes.push(...(mergeTexts(mdastTexts) as any as unistLib.Node[]));\n      textQueue = [];\n      if (!n) continue;\n      const node = buildMdastNode(n, overrides);\n      if (node) {\n        mdastNodes.push(node as unistLib.Node);\n      }\n    }\n  }\n\n  return mdastNodes;\n};\n\nconst buildMdastNode = (\n  node: Exclude<slateInternal.SlateNode, slateInternal.Text>,\n  overrides: OverridedSlateBuilders\n): Exclude<mdast.Content, TextOrDecoration> | null => {\n  const customNode = overrides[node.type]?.(node as any, (children) =>\n    convertNodes(children, overrides)\n  );\n  if (customNode != null) {\n    return customNode as any;\n  }\n\n  switch (node.type) {\n    case \"paragraph\":\n      return buildParagraph(node, overrides);\n    case \"heading\":\n      return buildHeading(node, overrides);\n    case \"thematicBreak\":\n      return buildThematicBreak(node);\n    case \"blockquote\":\n      return buildBlockquote(node, overrides);\n    case \"list\":\n      return buildList(node, overrides);\n    case \"listItem\":\n      return buildListItem(node, overrides);\n    case \"table\":\n      return buildTable(node, overrides);\n    case \"tableRow\":\n      return buildTableRow(node, overrides);\n    case \"tableCell\":\n      return buildTableCell(node, overrides);\n    case \"html\":\n      return buildHtml(node);\n    case \"code\":\n      return buildCode(node);\n    case \"yaml\":\n      return buildYaml(node);\n    case \"toml\":\n      return buildToml(node);\n    case \"definition\":\n      return buildDefinition(node);\n    case \"footnoteDefinition\":\n      return buildFootnoteDefinition(node, overrides);\n    case \"break\":\n      return buildBreak(node);\n    case \"link\":\n      return buildLink(node, overrides);\n    case \"image\":\n      return buildImage(node);\n    case \"linkReference\":\n      return buildLinkReference(node, overrides);\n    case \"imageReference\":\n      return buildImageReference(node);\n    case \"footnote\":\n      return buildFootnote(node, overrides);\n    case \"footnoteReference\":\n      return creatFootnoteReference(node);\n    case \"math\":\n      return buildMath(node);\n    case \"inlineMath\":\n      return buildInlineMath(node);\n    default:\n      unreachable(node);\n      break;\n  }\n  return null;\n};\n\nconst isText = (node: slateInternal.SlateNode): node is slateInternal.Text => {\n  return \"text\" in node;\n};\n\nconst mergeTexts = (nodes: TextOrDecoration[]): TextOrDecoration[] => {\n  const res: TextOrDecoration[] = [];\n  for (const cur of nodes) {\n    const last = res[res.length - 1];\n    if (last && last.type === cur.type) {\n      if (last.type === \"text\") {\n        last.value += (cur as typeof last).value;\n      } else if (last.type === \"inlineCode\") {\n        last.value += (cur as typeof last).value;\n      } else {\n        last.children = mergeTexts(\n          last.children.concat(\n            (cur as typeof last).children\n          ) as TextOrDecoration[]\n        );\n      }\n    } else {\n      if (cur.type === \"text\" && cur.value === \"\") continue;\n      res.push(cur);\n    }\n  }\n  return res;\n};\n\nconst buildParagraph = (\n  { type, children }: slateInternal.Paragraph,\n  overrides: OverridedSlateBuilders\n): mdast.Paragraph => {\n  return {\n    type,\n    children: convertNodes(children, overrides) as mdast.Paragraph[\"children\"],\n  };\n};\n\nconst buildHeading = (\n  { type, depth, children }: slateInternal.Heading,\n  overrides: OverridedSlateBuilders\n): mdast.Heading => {\n  return {\n    type,\n    depth,\n    children: convertNodes(children, overrides) as mdast.Heading[\"children\"],\n  };\n};\n\nconst buildThematicBreak = ({\n  type,\n}: slateInternal.ThematicBreak): mdast.ThematicBreak => {\n  return {\n    type,\n  };\n};\n\nconst buildBlockquote = (\n  { type, children }: slateInternal.Blockquote,\n  overrides: OverridedSlateBuilders\n): mdast.Blockquote => {\n  return {\n    type,\n    children: convertNodes(children, overrides) as mdast.Blockquote[\"children\"],\n  };\n};\n\nconst buildList = (\n  { type, ordered, start, spread, children }: slateInternal.List,\n  overrides: OverridedSlateBuilders\n): mdast.List => {\n  return {\n    type,\n    ordered,\n    start,\n    spread,\n    children: convertNodes(children, overrides) as mdast.List[\"children\"],\n  };\n};\n\nconst buildListItem = (\n  { type, checked, spread, children }: slateInternal.ListItem,\n  overrides: OverridedSlateBuilders\n): mdast.ListItem => {\n  return {\n    type,\n    checked,\n    spread,\n    children: convertNodes(children, overrides) as mdast.ListItem[\"children\"],\n  };\n};\n\nconst buildTable = (\n  { type, align, children }: slateInternal.Table,\n  overrides: OverridedSlateBuilders\n): mdast.Table => {\n  return {\n    type,\n    align,\n    children: convertNodes(children, overrides) as mdast.Table[\"children\"],\n  };\n};\n\nconst buildTableRow = (\n  { type, children }: slateInternal.TableRow,\n  overrides: OverridedSlateBuilders\n): mdast.TableRow => {\n  return {\n    type,\n    children: convertNodes(children, overrides) as mdast.TableRow[\"children\"],\n  };\n};\n\nconst buildTableCell = (\n  { type, children }: slateInternal.TableCell,\n  overrides: OverridedSlateBuilders\n): mdast.TableCell => {\n  return {\n    type,\n    children: convertNodes(children, overrides) as mdast.TableCell[\"children\"],\n  };\n};\n\nconst buildHtml = ({ type, children }: slateInternal.Html): mdast.HTML => {\n  return {\n    type,\n    value: children[0]!.text,\n  };\n};\n\nconst buildCode = ({\n  type,\n  lang,\n  meta,\n  children,\n}: slateInternal.Code): mdast.Code => {\n  return {\n    type,\n    lang,\n    meta,\n    value: children[0]!.text,\n  };\n};\n\nconst buildYaml = ({ type, children }: slateInternal.Yaml): mdast.YAML => {\n  return {\n    type,\n    value: children[0]!.text,\n  };\n};\n\nconst buildToml = ({ type, children }: slateInternal.Toml): mdast.TOML => {\n  return {\n    type,\n    value: children[0]!.text,\n  };\n};\n\nconst buildDefinition = ({\n  type,\n  identifier,\n  label,\n  url,\n  title,\n}: slateInternal.Definition): mdast.Definition => {\n  return {\n    type,\n    identifier,\n    label,\n    url,\n    title,\n  };\n};\n\nconst buildFootnoteDefinition = (\n  { type, identifier, label, children }: slateInternal.FootnoteDefinition,\n  overrides: OverridedSlateBuilders\n): mdast.FootnoteDefinition => {\n  return {\n    type,\n    identifier,\n    label,\n    children: convertNodes(\n      children,\n      overrides\n    ) as mdast.FootnoteDefinition[\"children\"],\n  };\n};\n\nconst buildBreak = ({ type }: slateInternal.Break): mdast.Break => {\n  return {\n    type,\n  };\n};\n\nconst buildLink = (\n  { type, url, title, children }: slateInternal.Link,\n  overrides: OverridedSlateBuilders\n): mdast.Link => {\n  return {\n    type,\n    url,\n    title,\n    children: convertNodes(children, overrides) as mdast.Link[\"children\"],\n  };\n};\n\nconst buildImage = ({\n  type,\n  url,\n  title,\n  alt,\n}: slateInternal.Image): mdast.Image => {\n  return {\n    type,\n    url,\n    title,\n    alt,\n  };\n};\n\nconst buildLinkReference = (\n  {\n    type,\n    identifier,\n    label,\n    referenceType,\n    children,\n  }: slateInternal.LinkReference,\n  overrides: OverridedSlateBuilders\n): mdast.LinkReference => {\n  return {\n    type,\n    identifier,\n    label,\n    referenceType,\n    children: convertNodes(\n      children,\n      overrides\n    ) as mdast.LinkReference[\"children\"],\n  };\n};\n\nconst buildImageReference = ({\n  type,\n  identifier,\n  label,\n  alt,\n  referenceType,\n}: slateInternal.ImageReference): mdast.ImageReference => {\n  return {\n    type,\n    identifier,\n    label,\n    alt,\n    referenceType,\n  };\n};\n\nconst buildFootnote = (\n  { type, children }: slateInternal.Footnote,\n  overrides: OverridedSlateBuilders\n): mdast.Footnote => {\n  return {\n    type,\n    children: convertNodes(children, overrides) as mdast.Footnote[\"children\"],\n  };\n};\n\nconst creatFootnoteReference = ({\n  type,\n  identifier,\n  label,\n}: slateInternal.FootnoteReference): mdast.FootnoteReference => {\n  return {\n    type,\n    identifier,\n    label,\n  };\n};\n\nconst buildMath = ({ type, children }: slateInternal.Math): mdast.Math => {\n  return {\n    type,\n    value: children[0]!.text,\n  };\n};\n\nconst buildInlineMath = ({\n  type,\n  children,\n}: slateInternal.InlineMath): mdast.InlineMath => {\n  return {\n    type,\n    value: children[0]!.text,\n  };\n};\n","import type { Plugin } from \"unified\";\nimport type * as mdast from \"../models/mdast\";\nimport type * as slate from \"../models/slate\";\nimport {\n  slateToMdast,\n  OverridedSlateBuilders,\n} from \"../transformers/slate-to-mdast\";\n\nexport type Options = {\n  overrides?: OverridedSlateBuilders;\n};\n\nconst plugin: Plugin<[Options?], slate.Node, mdast.Root> = ({\n  overrides = {},\n} = {}) => {\n  return function (node) {\n    return slateToMdast(node, overrides);\n  };\n};\nexport default plugin;\n","import type { BlockJSON, InlineJSON, TextJSON } from \"slate_legacy\";\nimport type * as slate from \"../models/slate\";\n\nexport const slate047ToSlate = (\n  nodes: (BlockJSON | InlineJSON | TextJSON)[]\n): slate.Node[] => {\n  return convertNodes(nodes);\n};\n\nconst convertNodes = (\n  nodes: (BlockJSON | InlineJSON | TextJSON)[]\n): slate.Node[] => {\n  return nodes.reduce<slate.Node[]>((acc, n) => {\n    const node = convert(n as BlockJSON);\n    if (node) {\n      acc.push(node);\n    }\n    return acc;\n  }, []);\n};\n\nconst convert = (\n  node: BlockJSON | InlineJSON | TextJSON\n): slate.Node | null => {\n  switch (node.object) {\n    case \"block\": {\n      const { type, nodes, data } = node;\n      return {\n        type,\n        children: convertNodes(nodes as BlockJSON[]),\n        ...data,\n      };\n    }\n    case \"inline\": {\n      const { type, nodes, data } = node;\n      return {\n        type,\n        children: convertNodes(nodes as InlineJSON[]),\n        ...data,\n      };\n    }\n    case \"text\": {\n      const { text = \"\", marks } = node;\n      return {\n        text,\n        ...marks?.reduce((acc, m) => {\n          acc[m.type] = true;\n          return acc;\n        }, {} as { [key: string]: true }),\n      };\n    }\n    default:\n      break;\n  }\n  return null;\n};\n","import type { Plugin } from \"unified\";\nimport { slateToMdast } from \"../transformers/slate-to-mdast\";\nimport { slate047ToSlate } from \"../transformers/slate0.47-to-slate\";\n\nconst plugin: Plugin<[]> = function () {\n  return function (node) {\n    return slateToMdast(\n      {\n        type: \"root\",\n        children: slate047ToSlate((node as any).children),\n      },\n      {}\n    );\n  };\n};\nexport default plugin;\n","import type {\n  ValueJSON,\n  BlockJSON,\n  InlineJSON,\n  TextJSON,\n  MarkJSON,\n} from \"slate_legacy\";\nimport type { Decoration, SlateNode } from \"./mdast-to-slate\";\n\nexport const slateToSlate047 = (nodes: SlateNode[]): ValueJSON => {\n  return {\n    object: \"value\",\n    document: {\n      object: \"document\",\n      nodes: convertNodes(nodes),\n    },\n  };\n};\n\nconst convertNodes = (\n  nodes: SlateNode[]\n): (BlockJSON | InlineJSON | TextJSON)[] => {\n  return nodes.reduce<(BlockJSON | InlineJSON | TextJSON)[]>((acc, n) => {\n    const node = convert(n as SlateNode);\n    if (node) {\n      acc.push(node);\n    }\n    return acc;\n  }, []);\n};\n\nconst convert = (node: SlateNode): BlockJSON | InlineJSON | TextJSON | null => {\n  if (\"text\" in node) {\n    const { text, ...rest } = node;\n    const marks: MarkJSON[] = Object.keys(rest).reduce<\n      { object: \"mark\"; type: string }[]\n    >((acc, type) => {\n      if (!rest[type as keyof Decoration]) return acc;\n      acc.push({\n        object: \"mark\",\n        type,\n      });\n      return acc;\n    }, []);\n    const res: TextJSON = {\n      object: \"text\",\n      text,\n      marks,\n    };\n    return res;\n  }\n  switch (node.type) {\n    case \"paragraph\":\n    case \"heading\":\n    case \"blockquote\":\n    case \"list\":\n    case \"listItem\":\n    case \"table\":\n    case \"tableRow\":\n    case \"tableCell\":\n    case \"html\":\n    case \"code\":\n    case \"yaml\":\n    case \"toml\":\n    case \"thematicBreak\":\n    case \"definition\":\n    case \"break\":\n    case \"math\": {\n      const { type, children, ...rest } = node;\n      const res: BlockJSON = {\n        object: \"block\",\n        type,\n        nodes: convertNodes(children as SlateNode[]),\n        data: {\n          ...rest,\n        },\n      };\n      return res;\n    }\n    case \"footnoteDefinition\":\n    case \"link\":\n    case \"linkReference\":\n    case \"image\":\n    case \"imageReference\":\n    case \"footnote\":\n    case \"footnoteReference\":\n    case \"inlineMath\": {\n      const { type, children, ...rest } = node;\n      const res: InlineJSON = {\n        object: \"inline\",\n        type,\n        nodes: convertNodes(children as SlateNode[]) as InlineJSON[],\n        data: {\n          ...rest,\n        },\n      };\n      return res;\n    }\n    default:\n      break;\n  }\n  return null;\n};\n","import type { Plugin } from \"unified\";\nimport { mdastToSlate, SlateNode } from \"../transformers/mdast-to-slate\";\nimport { slateToSlate047 } from \"../transformers/slate-to-slate0.47\";\n\nconst plugin: Plugin<[]> = function () {\n  this.Compiler = function (node) {\n    return slateToSlate047(mdastToSlate(node as any, {}) as SlateNode[]);\n  };\n};\nexport default plugin;\n","import type * as slate from \"../../models/slate\";\nimport type * as mdast from \"../../models/mdast\";\n\nexport type Decoration = Readonly<{\n  [key in (\n    | mdast.Emphasis\n    | mdast.Strong\n    | mdast.Delete\n    | mdast.InlineCode\n  )[\"type\"]]?: true;\n}>;\n\nexport type OverridedMdastBuilders = {\n  [key in mdast.Content[\"type\"]]?: MdastBuilder<key>;\n} & ({ [key: string]: MdastBuilder<typeof key> } | {});\n\nexport type MdastBuilder<T extends string> = (\n  node: T extends mdast.Content[\"type\"]\n    ? Extract<mdast.Content, { type: T }>\n    : unknown,\n  next: (children: any[]) => any\n) => object | undefined;\n\nexport const mdastToGoldenSlate = (\n  node: mdast.Root,\n  overrides: OverridedMdastBuilders\n): slate.Node[] => {\n  return buildSlateRoot(node, overrides);\n};\n\nconst buildSlateRoot = (\n  root: mdast.Root,\n  overrides: OverridedMdastBuilders\n): slate.Node[] => {\n  return convertNodes(root.children, {}, overrides);\n};\n\nconst convertNodes = (\n  nodes: mdast.Content[],\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n): slate.Node[] => {\n  return nodes.reduce<slate.Node[]>((acc, node) => {\n    acc.push(...buildSlateNode(node, deco, overrides));\n    return acc;\n  }, []);\n};\n\nconst emptyParagraph = {\n  type: \"paragraph\",\n  children: [{ text: \"\" }],\n};\n\nconst buildSlateNode = (\n  node: mdast.Content,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n): SlateNode[] => {\n  const customNode = overrides[node.type]?.(node as any, (children) =>\n    convertNodes(children, deco, overrides)\n  );\n  if (customNode != null) {\n    return [customNode as SlateNode];\n  }\n\n  switch (node.type) {\n    case \"paragraph\":\n      return [buildParagraph(node, deco, overrides), emptyParagraph];\n    case \"heading\":\n      return [buildHeading(node, deco, overrides)];\n    case \"text\":\n      return [buildText(node.value, deco)];\n    case \"link\":\n      return [buildLink(node, deco, overrides)];\n    default:\n      return [];\n  }\n};\n\nexport type Paragraph = ReturnType<typeof buildParagraph>;\n\nconst buildParagraph = (\n  { type, children }: mdast.Paragraph,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  return {\n    type,\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type Heading = ReturnType<typeof buildHeading>;\n\nconst buildHeading = (\n  { children, depth }: mdast.Heading,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  const typeByDepth = {\n    1: \"heading\",\n    2: \"heading\",\n    3: \"subheading\",\n    4: \"subheading2\",\n    5: \"paragraph\",\n    6: \"paragraph\",\n  };\n  return {\n    type: typeByDepth[depth],\n    children: convertNodes(children, deco, overrides),\n  };\n};\n\nexport type Text = ReturnType<typeof buildText>;\n\nconst buildText = (text: string, deco: Decoration) => {\n  return {\n    ...deco,\n    text,\n  };\n};\n\nexport type Link = ReturnType<typeof buildLink>;\n\nconst getTextFromNode = (\n  node: { text: string } | { children: slate.Node[] }\n): string => {\n  if (\"text\" in node) {\n    return node.text;\n  }\n\n  return node.children.reduce((text, child) => {\n    return (\n      text +\n      getTextFromNode(child as { text: string } | { children: slate.Node[] })\n    );\n  }, \"\");\n};\n\nconst buildLink = (\n  { children, url }: mdast.Link,\n  deco: Decoration,\n  overrides: OverridedMdastBuilders\n) => {\n  const node: {\n    type: string;\n    children: slate.Node[];\n    href?: string;\n    id?: number;\n  } = {\n    type: \"link\",\n    children: convertNodes(children, deco, overrides),\n  };\n  const text = getTextFromNode(node);\n  const match = /^\\((?<id>\\d+)\\)$/g.exec(text);\n  if (match?.groups?.[\"id\"]) {\n    node.type = \"cite\";\n    node.id = Number.parseInt(match?.groups?.[\"id\"]);\n    node.children = [{ text: \"\" }];\n  } else {\n    node.href = url;\n  }\n  return node;\n};\n\nexport type SlateNode = Paragraph | Heading | Text | Link;\n","import type { Plugin } from \"unified\";\nimport type * as mdast from \"../models/mdast\";\nimport type * as slate from \"../models/slate\";\nimport { mdastToGoldenSlate } from \"../transformers/mdast-to-golden-slate\";\n\ntype Row = { entity: unknown; value: any; index: number } & Record<\n  string,\n  unknown\n>;\n\ntype Column = {\n  key: string;\n} & Record<string, unknown>;\n\ntype CustomElement = {\n  type: (typeof BLOCK_TYPES)[number];\n  src?: string;\n  data?: {\n    title?: string;\n    heading?: string;\n    math?: string;\n  };\n  columns?: Column[];\n  rows?: Row[];\n  title?: string;\n  maxRowCount?: number;\n  query?: unknown | null;\n  tableId?: string;\n  heading?: string;\n  children: (CustomElement | CustomText)[];\n  inserted?: true;\n  deleted?: true;\n  id?: number;\n  start?: number;\n  links?: { name: string; id: number }[];\n  position?: \"left\" | \"center\" | \"right\";\n  width?: number;\n  height?: number;\n  href?: string;\n  videoType?: \"youtube\" | \"vimeo\";\n  math?: string;\n  listId?: string;\n};\n\ntype CustomText = {\n  type?: undefined;\n  children?: undefined;\n  text: string;\n  italic?: true;\n  bold?: true;\n  underline?: true;\n  superscript?: true;\n  subscript?: true;\n  inserted?: true;\n  deleted?: true;\n};\n\nexport type GoldenNode = {\n  object: \"inline\" | \"block\";\n  kind?: string;\n  type: string;\n  data: Omit<CustomElement, \"type\" | \"children\">;\n  nodes: (GoldenNode | GoldenTextNode)[];\n  inserted?: boolean;\n  deleted?: boolean;\n};\n\ntype GoldenTextNode = {\n  object: \"text\";\n  leaves: Array<{\n    object: \"leaf\";\n    text: string;\n    marks: {\n      object: \"mark\";\n      type: string;\n      data: any;\n    }[];\n  }>;\n};\n\nexport const BLOCK = {\n  p: \"paragraph\",\n  h1: \"heading\",\n  h2: \"subheading\",\n  h3: \"subheading2\",\n  ul: \"bulleted-list\",\n  ol: \"numbered-list\",\n  li: \"list-item\",\n  img: \"image\",\n  video: \"video\",\n  table: \"table\",\n  entitytable: \"entity-table\",\n  math: \"math\",\n  code: \"code\",\n  blockquote: \"block-quote\",\n  queryView: \"query-view\",\n  listView: \"list-view\",\n  linkBlock: \"link-block\",\n} as const;\nexport const INLINE = {\n  a: \"link\",\n  internalLink: \"internal-link\",\n  cite: \"cite\",\n  mathInline: \"math-inline\",\n} as const;\nexport const MARK = {\n  em: \"italic\",\n  strong: \"bold\",\n  u: \"underline\",\n  superScript: \"superscript\",\n  subScript: \"subscript\",\n} as const;\nexport const BLOCK_TYPES = Object.values(BLOCK);\n\nconst childToGolden = (node: CustomElement): GoldenNode => {\n  const { type, children, ...data } = node;\n  const newNode: GoldenNode = {\n    object: BLOCK_TYPES.includes(type) ? \"block\" : \"inline\",\n    type,\n    nodes: children?.reduce((arr, child) => {\n      if (\"children\" in child) {\n        arr.push(childToGolden(child as CustomElement));\n      } else {\n        const lastNode = arr[arr.length - 1];\n        const { text, ...marks } = child as CustomText;\n\n        const leaves: GoldenTextNode[\"leaves\"][number][] = [\n          {\n            object: \"leaf\",\n            text,\n            marks: Object.keys(marks).map((type) => ({\n              object: \"mark\",\n              type,\n              data: {},\n            })),\n          },\n        ];\n\n        if (lastNode && \"leaves\" in lastNode) {\n          // merge neighboring text nodes\n          lastNode.leaves.push(...leaves);\n        } else {\n          arr.push({\n            object: \"text\",\n            leaves,\n          });\n        }\n      }\n      return arr;\n    }, [] as Array<GoldenNode | GoldenTextNode>),\n    data,\n  };\n  return newNode;\n};\n\nconst plugin: Plugin<[], mdast.Root, slate.Node[]> = function () {\n  this.Compiler = function (node) {\n    return mdastToGoldenSlate(node, {}).map((child) =>\n      childToGolden(child as CustomElement)\n    );\n  };\n};\nexport default plugin;\n"],"names":["buildSlateRoot","convertNodes","buildSlateNode","buildParagraph","buildHeading","buildThematicBreak","buildBlockquote","buildList","buildListItem","buildTable","buildTableRow","buildTableCell","buildHtml","buildCode","buildYaml","buildToml","buildDefinition","buildFootnoteDefinition","buildText","buildBreak","buildLink","buildImage","buildLinkReference","buildImageReference","buildFootnote","buildMath","buildInlineMath","plugin","convert"],"mappings":"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","x_google_ignoreList":[0]}